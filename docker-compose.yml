version: '3.8'
services:

  db:
    image: mysql:latest
    ports:
      - "3308:3306"
    environment:
      container_name: 'pocdb'
      MYSQL_DATABASE: 'pocdb'
      MYSQL_ROOT_PASSWORD: 'root'
    volumes:
      - db:/var/lib/mysql
    networks:
      - my-network

  address-service:
    container_name: address-service
    build:
      context: ./adress-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/pocdb?allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL5Dialect

      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://eureka-server:8761/eureka
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT: http://zipkin-server:9411/api/v2/spans

    depends_on:
      - db
      - eureka-server
    networks:
      - my-network

  employee-service:
    container_name: employee-service
    build:
      context: ./springboot-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/pocdb?allowPublicKeyRetrieval=true&useSSL=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL5Dialect

      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://eureka-server:8761/eureka
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT: http://zipkin-server:9411/api/v2/spans

    depends_on:
      - db
      - eureka-server
    networks:
      - my-network

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8765:8765"
    networks:
      - my-network
    depends_on:
      - eureka-server
    environment:
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://eureka-server:8761/eureka
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT: http://zipkin-server:9411/api/v2/spans


  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - my-network

  zipkin-server:
    image: openzipkin/zipkin:latest
    container_name: Zipkin
    ports:
      - "9411:9411"
    networks:
      - my-network
    restart: always #Restart if there is a problem starting up

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

    networks:
      - my-network
    restart: always #Restart if there is a problem starting up


volumes:
  db:


networks:
  my-network:
